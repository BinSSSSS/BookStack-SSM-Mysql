<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tblack.bookstack.mapper.UploadFileMapper">
	<resultMap id="UploadFileResultMap"
		type="cn.tblack.bookstack.pojo.UploadFile">
		<id column="ID" jdbcType="DECIMAL" property="id" />
		<result column="OLD_NAME" jdbcType="VARCHAR" property="oldName" />
		<result column="SAVE_PATH" jdbcType="VARCHAR"
			property="savePath" />
		<result column="RELATIVE_PATH" jdbcType="VARCHAR"
			property="relativePath" />
		<result column="REAL_NAME" jdbcType="VARCHAR"
			property="realName" />
		<result column="FILE_SIZE" jdbcType="DECIMAL"
			property="fileSize" />
		<result column="FILE_TYPE" jdbcType="VARCHAR"
			property="fileType" />
		<result column="FILE_DESC" jdbcType="VARCHAR"
			property="fileDesc" />
		<result column="UPLOAD_USER" jdbcType="VARCHAR"
			property="uploadUser" />
		<result column="UPLOAD_DATE" jdbcType="TIMESTAMP"
			property="uploadDate" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<sql id="UploadFile_Column_List">
		ID, OLD_NAME, SAVE_PATH, RELATIVE_PATH, REAL_NAME,
		FILE_SIZE, FILE_TYPE,
		FILE_DESC,
		UPLOAD_USER, UPLOAD_DATE
	</sql>

	<select id="selectByExample"
		parameterType="cn.tblack.bookstack.pojo.UploadFileExample"
		resultMap="UploadFileResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="UploadFile_Column_List" />
		from UPLOAD_FILE
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>


	<!-- 拿到数据表内的所有数据 -->
	<select id="selectAll" resultMap="UploadFileResultMap">
		select
		<include refid="UploadFile_Column_List" />
		from UPLOAD_FILE
	</select>

	<!-- 根据上传文件的id来查询数据 -->
	<select id="selectByFileId" parameterType="java.lang.Integer"
		resultMap="UploadFileResultMap">
		select
		<include refid="UploadFile_Column_List" />
		from UPLOAD_FILE
		where ID = #{id,jdbcType=DECIMAL}
	</select>


	<!-- 根据上传文件的保存路径来查询数据 -->
	<select id="selectBySavePath" parameterType="java.lang.String"
		resultMap="UploadFileResultMap">
		select
		<include refid="UploadFile_Column_List" />
		from UPLOAD_FILE
		where SAVE_PATH = #{savePath,jdbcType=VARCHAR}
	</select>

	<!-- 根据上传文件时的名字来查询数据 -->
	<select id="selectByOldName" parameterType="java.lang.String"
		resultMap="UploadFileResultMap">
		select
		<include refid="UploadFile_Column_List" />
		from UPLOAD_FILE
		where OLD_NAME = #{oldName,jdbcType=VARCHAR}
	</select>

	<!-- 根据上传文件的保存名字来查询数据 -->
	<select id="selectByRealName" parameterType="java.lang.String"
		resultMap="UploadFileResultMap">
		select
		<include refid="UploadFile_Column_List" />
		from UPLOAD_FILE
		where REAL_NAME = #{realName,jdbcType=VARCHAR}
	</select>

	<!-- 根据上传文件的相对路径来查询数据 -->
	<select id="selectByRelativePath" parameterType="string"
		resultMap="UploadFileResultMap">
		select
		<include refid="UploadFile_Column_List" />
		from UPLOAD_FILE
		where RELATIVE_PATH = #{relativePath,jdbcType=VARCHAR}
	</select>

	<!-- 根据上传文件的id来进行数据的删除 -->
	<delete id="deleteByFileId" parameterType="java.lang.Integer">
		delete from
		UPLOAD_FILE
		where ID = #{id,jdbcType=DECIMAL}
	</delete>

	<!-- 根据上传文件的保存路径来进行数据的删除 -->
	<delete id="deleteBySavePath" parameterType="java.lang.String">
		delete from
		UPLOAD_FILE
		where SAVE_PATH = #{savePath,jdbcType=VARCHAR}
	</delete>

	<!-- 根据上传文件时的名字进行数据的删除 -->
	<delete id="deleteByOldName" parameterType="java.lang.String">
		delete from
		UPLOAD_FILE
		where OLD_NAME = #{oldName,jdbcType=VARCHAR}
	</delete>

	<!-- 根据上传文件的保存名来进行数据的删除 -->
	<delete id="deleteByRealName" parameterType="java.lang.String">
		delete from
		UPLOAD_FILE
		where REAL_NAME = #{realName,jdbcType=VARCHAR}
	</delete>

	<delete id="deleteByExample"
		parameterType="cn.tblack.bookstack.pojo.UploadFileExample">
		delete from UPLOAD_FILE
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>

	<!-- 进行新数据的插入。 -->
	<insert id="insert"
		parameterType="cn.tblack.bookstack.pojo.UploadFile">
		insert into UPLOAD_FILE (ID, OLD_NAME, SAVE_PATH,RELATIVE_PATH,
		REAL_NAME, FILE_SIZE, FILE_TYPE,
		FILE_DESC, UPLOAD_USER, UPLOAD_DATE
		)
		values (#{id,jdbcType=DECIMAL}, #{oldName,jdbcType=VARCHAR},
		#{savePath,jdbcType=VARCHAR},#{relativePath,jdbcType=VARCHAR},
		#{realName,jdbcType=VARCHAR},
		#{fileSize,jdbcType=DECIMAL}, #{fileType,jdbcType=VARCHAR},
		#{fileDesc,jdbcType=VARCHAR}, #{uploadUser,jdbcType=VARCHAR},
		#{uploadDate,jdbcType=TIMESTAMP}
		)
	</insert>

	<!-- 进行新数据的插入，空字段不插入 -->
	<insert id="insertSelective"
		parameterType="cn.tblack.bookstack.pojo.UploadFile">
		insert into UPLOAD_FILE
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="oldName != null">
				OLD_NAME,
			</if>
			<if test="savePath != null">
				SAVE_PATH,
			</if>
			<if test="relativePath != null">
				RELATIVE_PATH,
			</if>
			<if test="realName != null">
				REAL_NAME,
			</if>
			<if test="fileSize != null">
				FILE_SIZE,
			</if>
			<if test="fileType != null">
				FILE_TYPE,
			</if>
			<if test="fileDesc != null">
				FILE_DESC,
			</if>
			<if test="uploadUser != null">
				UPLOAD_USER,
			</if>
			<if test="uploadDate != null">
				UPLOAD_DATE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=DECIMAL},
			</if>
			<if test="oldName != null">
				#{oldName,jdbcType=VARCHAR},
			</if>
			<if test="savePath != null">
				#{savePath,jdbcType=VARCHAR},
			</if>
			<if test="relativePath != null">
				#{relativePath,jdbcType=VARCHAR},
			</if>
			<if test="realName != null">
				#{realName,jdbcType=VARCHAR},
			</if>
			<if test="fileSize != null">
				#{fileSize,jdbcType=DECIMAL},
			</if>
			<if test="fileType != null">
				#{fileType,jdbcType=VARCHAR},
			</if>
			<if test="fileDesc != null">
				#{fileDesc,jdbcType=VARCHAR},
			</if>
			<if test="uploadUser != null">
				#{uploadUser,jdbcType=VARCHAR},
			</if>
			<if test="uploadDate != null">
				#{uploadDate,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>

	<select id="countByExample"
		parameterType="cn.tblack.bookstack.pojo.UploadFileExample"
		resultType="java.lang.Long">
		select count(*) from UPLOAD_FILE
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>

	<!-- 拿到数据表内所有数据的条数 -->
	<select id="count" resultType="java.lang.Long">
		select count(*) from UPLOAD_FILE
	</select>

	<!-- 拿到数据库表内指定上传文件id的数据条数 -->
	<select id="countByFileId" resultType="java.lang.Long">
		select count(*) from
		UPLOAD_FILE
		where ID = #{id,jdbcType=DECIMAL}
	</select>

	<!-- 拿到指定保存路径的数据条数 -->
	<select id="countBySavePath" resultType="java.lang.Long">
		select count(*) from
		UPLOAD_FILE
		where SAVE_PATH = #{savePath,jdbcType=VARCHAR}
	</select>

	<!-- 拿到指定上传文件时名字的数据条数 -->
	<select id="countByOldName" resultType="java.lang.Long">
		select count(*) from
		UPLOAD_FILE
		where OLD_NAME = #{oldName,jdbcType=VARCHAR}
	</select>

	<!-- 拿到指定保存文件名的数据条数 -->
	<select id="countByRealName" resultType="java.lang.Long">
		select count(*) from
		UPLOAD_FILE
		where REAL_NAME = #{realName,jdbcType=VARCHAR}
	</select>

	<update id="updateByExampleSelective" parameterType="map">
		update UPLOAD_FILE
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=DECIMAL},
			</if>
			<if test="record.oldName != null">
				OLD_NAME = #{record.oldName,jdbcType=VARCHAR},
			</if>
			<if test="record.savePath != null">
				SAVE_PATH = #{record.savePath,jdbcType=VARCHAR},
			</if>
			<if test="record.realName != null">
				REAL_NAME = #{record.realName,jdbcType=VARCHAR},
			</if>
			<if test="record.fileSize != null">
				FILE_SIZE = #{record.fileSize,jdbcType=DECIMAL},
			</if>
			<if test="record.fileType != null">
				FILE_TYPE = #{record.fileType,jdbcType=VARCHAR},
			</if>
			<if test="record.fileDesc != null">
				FILE_DESC = #{record.fileDesc,jdbcType=VARCHAR},
			</if>
			<if test="record.uploadUser != null">
				UPLOAD_USER = #{record.uploadUser,jdbcType=VARCHAR},
			</if>
			<if test="record.uploadDate != null">
				UPLOAD_DATE = #{record.uploadDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>

	<update id="updateByExample" parameterType="map">
		update UPLOAD_FILE
		set ID = #{record.id,jdbcType=DECIMAL},
		OLD_NAME = #{record.oldName,jdbcType=VARCHAR},
		SAVE_PATH =
		#{record.savePath,jdbcType=VARCHAR},
		REAL_NAME =
		#{record.realName,jdbcType=VARCHAR},
		FILE_SIZE =
		#{record.fileSize,jdbcType=DECIMAL},
		FILE_TYPE =
		#{record.fileType,jdbcType=VARCHAR},
		FILE_DESC =
		#{record.fileDesc,jdbcType=VARCHAR},
		UPLOAD_USER =
		#{record.uploadUser,jdbcType=VARCHAR},
		UPLOAD_DATE =
		#{record.uploadDate,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>

	<!-- 按照上传文件的id来更新数据, 空字段数据不更新 -->
	<update id="updateByFileIdSelective"
		parameterType="cn.tblack.bookstack.pojo.UploadFile">
		update UPLOAD_FILE
		<set>
			<if test="oldName != null">
				OLD_NAME = #{oldName,jdbcType=VARCHAR},
			</if>
			<if test="savePath != null">
				SAVE_PATH = #{savePath,jdbcType=VARCHAR},
			</if>
			<if test="realName != null">
				REAL_NAME = #{realName,jdbcType=VARCHAR},
			</if>
			<if test="fileSize != null">
				FILE_SIZE = #{fileSize,jdbcType=DECIMAL},
			</if>
			<if test="fileType != null">
				FILE_TYPE = #{fileType,jdbcType=VARCHAR},
			</if>
			<if test="fileDesc != null">
				FILE_DESC = #{fileDesc,jdbcType=VARCHAR},
			</if>
			<if test="uploadUser != null">
				UPLOAD_USER = #{uploadUser,jdbcType=VARCHAR},
			</if>
			<if test="uploadDate != null">
				UPLOAD_DATE = #{uploadDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		where ID = #{id,jdbcType=DECIMAL}
	</update>

	<!-- 根据指定的上传文件ID来更新数据 -->
	<update id="updateByFileId"
		parameterType="cn.tblack.bookstack.pojo.UploadFile">
		update UPLOAD_FILE
		set OLD_NAME =
		#{oldName,jdbcType=VARCHAR},
		SAVE_PATH = #{savePath,jdbcType=VARCHAR},
		REAL_NAME = #{realName,jdbcType=VARCHAR},
		FILE_SIZE =
		#{fileSize,jdbcType=DECIMAL},
		FILE_TYPE = #{fileType,jdbcType=VARCHAR},
		FILE_DESC = #{fileDesc,jdbcType=VARCHAR},
		UPLOAD_USER =
		#{uploadUser,jdbcType=VARCHAR},
		UPLOAD_DATE =
		#{uploadDate,jdbcType=TIMESTAMP}
		where ID =
		#{id,jdbcType=DECIMAL}
	</update>
</mapper>